{"ast":null,"code":"var _jsxFileName = \"/Users/lkf/Programmation/side_projects/reading_list_fullstack_graphQL/client/src/components/AddBook.js\";\nimport React, { useState } from \"react\";\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport { formatError } from \"graphql\";\nimport { ALL_AUTHORS, ADD_BOOK } from \"../queries/queries\";\nexport default function AddBook() {\n  const [name, setName] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [addTodo, {\n    mutationData\n  }] = useMutation(ADD_BOOK);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_AUTHORS);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }\n  }, \"...Loading data...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"Something went wrong...\", JSON.stringify(error));\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: e => {\n      e.preventDefault();\n      addTodo(name, genre, author);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"genre\",\n    type: \"text\",\n    value: genre,\n    onChange: e => setGenre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: author,\n    defaultValue: \"Select author\",\n    onChange: e => setAuthor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    value: \"Select author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Select author\"), data.allAuthors.map(author => /*#__PURE__*/React.createElement(\"option\", {\n    key: author.id,\n    value: author.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, author.name))))), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}","map":{"version":3,"sources":["/Users/lkf/Programmation/side_projects/reading_list_fullstack_graphQL/client/src/components/AddBook.js"],"names":["React","useState","useMutation","gql","useQuery","formatError","ALL_AUTHORS","ADD_BOOK","AddBook","name","setName","genre","setGenre","author","setAuthor","addTodo","mutationData","loading","error","data","JSON","stringify","e","preventDefault","target","value","allAuthors","map","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport { formatError } from \"graphql\";\nimport { ALL_AUTHORS, ADD_BOOK } from \"../queries/queries\";\n\n\nexport default function AddBook() {\nconst [name, setName] = useState(\"\")\nconst [genre, setGenre] = useState(\"\")\nconst [author, setAuthor] = useState(\"\")\nconst [addTodo, {mutationData}] = useMutation(ADD_BOOK)\nconst { loading, error, data } = useQuery(ALL_AUTHORS)\n  if (loading) return <p>...Loading data...</p>;\n  if (error) return <p>Something went wrong...{JSON.stringify(error)}</p>;\n\n  \n\n  return (\n    <form id=\"add-book\" onSubmit={e => {\n      e.preventDefault()\n      addTodo(name, genre, author)\n    }}>\n      <div className=\"field\">\n        <label>\n          <span>Name</span>\n          <input name=\"name\" type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n        </label>\n      </div>\n      <div className=\"field\">\n        <label>\n          <span>Genre</span>\n          <input name=\"genre\" type=\"text\" value={genre} onChange={e => setGenre(e.target.value)} />\n        </label>\n      </div>\n      <div className=\"field\">\n        <label >\n          <span>Author</span>\n          <select value={author} defaultValue=\"Select author\" onChange={e => setAuthor(e.target.value )}>\n            <option disabled value=\"Select author\">\n              Select author\n            </option>\n            {data.allAuthors.map((author) => (\n              <option key={author.id} value={author.id}>{author.name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <button>+</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}