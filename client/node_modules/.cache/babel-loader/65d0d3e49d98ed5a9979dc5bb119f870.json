{"ast":null,"code":"var _jsxFileName = \"/Users/lkf/Programmation/side_projects/reading_list_fullstack_graphQL/client/src/components/AddBook.js\";\nimport React, { useState } from \"react\";\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS } from \"../queries/queries\";\nconst ADD_BOOK = gql`\nmutation AddBook($name: String! , $genre: String!, $authorId: ID!){\n    addBook(name: $name , genre: $genre, authorId: $authorId){\n      name\n    }\n}\n`;\nexport default function AddBook() {\n  const [name, setName] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [authorId, setAuthorId] = useState(\"\");\n  const [addBook, mutationResponse] = useMutation(ADD_BOOK);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_AUTHORS);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"...Loading data...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Something went wrong...\", JSON.stringify(error));\n  console.log(mutationResponse);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: e => {\n      e.preventDefault();\n      addBook({\n        variables: {\n          name,\n          genre,\n          authorId\n        },\n        refetchQueries: [{\n          query: ALL_AUTHORS\n        }]\n      }); // if(window) window.location = window.location\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"genre\",\n    type: \"text\",\n    value: genre,\n    onChange: e => setGenre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: authorId,\n    onChange: e => setAuthorId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    selected: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Select author\"), data.allAuthors.map(author => /*#__PURE__*/React.createElement(\"option\", {\n    key: author.id,\n    value: author.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, author.name))))), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}","map":{"version":3,"sources":["/Users/lkf/Programmation/side_projects/reading_list_fullstack_graphQL/client/src/components/AddBook.js"],"names":["React","useState","useMutation","gql","useQuery","ALL_AUTHORS","ADD_BOOK","AddBook","name","setName","genre","setGenre","authorId","setAuthorId","addBook","mutationResponse","loading","error","data","JSON","stringify","console","log","e","preventDefault","variables","refetchQueries","query","target","value","allAuthors","map","author","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS } from \"../queries/queries\";\n\n\nconst ADD_BOOK = gql`\nmutation AddBook($name: String! , $genre: String!, $authorId: ID!){\n    addBook(name: $name , genre: $genre, authorId: $authorId){\n      name\n    }\n}\n`\n\nexport default function AddBook() {\nconst [name, setName] = useState(\"\")\nconst [genre, setGenre] = useState(\"\")\nconst [authorId, setAuthorId] = useState(\"\")\nconst [addBook, mutationResponse] = useMutation(ADD_BOOK)\nconst { loading, error, data } = useQuery(ALL_AUTHORS)\n  if (loading) return <p>...Loading data...</p>;\n  if (error) return <p>Something went wrong...{JSON.stringify(error)}</p>;\n\n  console.log(mutationResponse);\n  \n\n  return (\n    <form id=\"add-book\" onSubmit={e => {\n      e.preventDefault()\n      addBook({variables: {name, genre, authorId}, refetchQueries:[{query: ALL_AUTHORS }]})\n      // if(window) window.location = window.location\n    }}>\n      <div className=\"field\">\n        <label>\n          <span>Name</span>\n          <input name=\"name\" type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n        </label>\n      </div>\n      <div className=\"field\">\n        <label>\n          <span>Genre</span>\n          <input name=\"genre\" type=\"text\" value={genre} onChange={e => setGenre(e.target.value)} />\n        </label>\n      </div>\n      <div className=\"field\">\n        <label >\n          <span>Author</span>\n          <select value={authorId} onChange={e => setAuthorId(e.target.value )}>\n            <option disabled selected value=\"\">\n              Select author\n            </option>\n            {data.allAuthors.map((author) => (\n              <option key={author.id} value={author.id}>{author.name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <button>+</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}